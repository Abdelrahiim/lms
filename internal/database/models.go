// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"database/sql"
	"database/sql/driver"
	"encoding/json"
	"fmt"
	"time"

	"github.com/google/uuid"
	"github.com/sqlc-dev/pqtype"
)

type ContentType string

const (
	ContentTypeVideo       ContentType = "video"
	ContentTypeText        ContentType = "text"
	ContentTypePdf         ContentType = "pdf"
	ContentTypeAudio       ContentType = "audio"
	ContentTypeInteractive ContentType = "interactive"
)

func (e *ContentType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = ContentType(s)
	case string:
		*e = ContentType(s)
	default:
		return fmt.Errorf("unsupported scan type for ContentType: %T", src)
	}
	return nil
}

type NullContentType struct {
	ContentType ContentType `json:"contentType"`
	Valid       bool        `json:"valid"` // Valid is true if ContentType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullContentType) Scan(value interface{}) error {
	if value == nil {
		ns.ContentType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.ContentType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullContentType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.ContentType), nil
}

func (e ContentType) Valid() bool {
	switch e {
	case ContentTypeVideo,
		ContentTypeText,
		ContentTypePdf,
		ContentTypeAudio,
		ContentTypeInteractive:
		return true
	}
	return false
}

func AllContentTypeValues() []ContentType {
	return []ContentType{
		ContentTypeVideo,
		ContentTypeText,
		ContentTypePdf,
		ContentTypeAudio,
		ContentTypeInteractive,
	}
}

type CourseLevel string

const (
	CourseLevelBeginner     CourseLevel = "beginner"
	CourseLevelIntermediate CourseLevel = "intermediate"
	CourseLevelAdvanced     CourseLevel = "advanced"
)

func (e *CourseLevel) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = CourseLevel(s)
	case string:
		*e = CourseLevel(s)
	default:
		return fmt.Errorf("unsupported scan type for CourseLevel: %T", src)
	}
	return nil
}

type NullCourseLevel struct {
	CourseLevel CourseLevel `json:"courseLevel"`
	Valid       bool        `json:"valid"` // Valid is true if CourseLevel is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullCourseLevel) Scan(value interface{}) error {
	if value == nil {
		ns.CourseLevel, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.CourseLevel.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullCourseLevel) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.CourseLevel), nil
}

func (e CourseLevel) Valid() bool {
	switch e {
	case CourseLevelBeginner,
		CourseLevelIntermediate,
		CourseLevelAdvanced:
		return true
	}
	return false
}

func AllCourseLevelValues() []CourseLevel {
	return []CourseLevel{
		CourseLevelBeginner,
		CourseLevelIntermediate,
		CourseLevelAdvanced,
	}
}

type EnrollmentStatus string

const (
	EnrollmentStatusActive    EnrollmentStatus = "active"
	EnrollmentStatusCompleted EnrollmentStatus = "completed"
	EnrollmentStatusSuspended EnrollmentStatus = "suspended"
	EnrollmentStatusDropped   EnrollmentStatus = "dropped"
)

func (e *EnrollmentStatus) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = EnrollmentStatus(s)
	case string:
		*e = EnrollmentStatus(s)
	default:
		return fmt.Errorf("unsupported scan type for EnrollmentStatus: %T", src)
	}
	return nil
}

type NullEnrollmentStatus struct {
	EnrollmentStatus EnrollmentStatus `json:"enrollmentStatus"`
	Valid            bool             `json:"valid"` // Valid is true if EnrollmentStatus is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullEnrollmentStatus) Scan(value interface{}) error {
	if value == nil {
		ns.EnrollmentStatus, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.EnrollmentStatus.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullEnrollmentStatus) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.EnrollmentStatus), nil
}

func (e EnrollmentStatus) Valid() bool {
	switch e {
	case EnrollmentStatusActive,
		EnrollmentStatusCompleted,
		EnrollmentStatusSuspended,
		EnrollmentStatusDropped:
		return true
	}
	return false
}

func AllEnrollmentStatusValues() []EnrollmentStatus {
	return []EnrollmentStatus{
		EnrollmentStatusActive,
		EnrollmentStatusCompleted,
		EnrollmentStatusSuspended,
		EnrollmentStatusDropped,
	}
}

type UserRole string

const (
	UserRoleStudent    UserRole = "student"
	UserRoleInstructor UserRole = "instructor"
	UserRoleAdmin      UserRole = "admin"
)

func (e *UserRole) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = UserRole(s)
	case string:
		*e = UserRole(s)
	default:
		return fmt.Errorf("unsupported scan type for UserRole: %T", src)
	}
	return nil
}

type NullUserRole struct {
	UserRole UserRole `json:"userRole"`
	Valid    bool     `json:"valid"` // Valid is true if UserRole is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullUserRole) Scan(value interface{}) error {
	if value == nil {
		ns.UserRole, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.UserRole.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullUserRole) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.UserRole), nil
}

func (e UserRole) Valid() bool {
	switch e {
	case UserRoleStudent,
		UserRoleInstructor,
		UserRoleAdmin:
		return true
	}
	return false
}

func AllUserRoleValues() []UserRole {
	return []UserRole{
		UserRoleStudent,
		UserRoleInstructor,
		UserRoleAdmin,
	}
}

type AccessCode struct {
	ID          uuid.UUID      `json:"id"`
	CourseID    uuid.UUID      `json:"courseId"`
	Code        string         `json:"code"`
	Description sql.NullString `json:"description"`
	MaxUses     sql.NullInt32  `json:"maxUses"`
	UsedCount   sql.NullInt32  `json:"usedCount"`
	ValidFrom   sql.NullTime   `json:"validFrom"`
	ValidUntil  sql.NullTime   `json:"validUntil"`
	CreatedBy   uuid.NullUUID  `json:"createdBy"`
	CreatedAt   sql.NullTime   `json:"createdAt"`
}

type AnalyticsEvent struct {
	ID            uuid.UUID             `json:"id"`
	UserID        uuid.NullUUID         `json:"userId"`
	SessionID     uuid.NullUUID         `json:"sessionId"`
	EventType     string                `json:"eventType"`
	EventCategory sql.NullString        `json:"eventCategory"`
	EventAction   sql.NullString        `json:"eventAction"`
	EventLabel    sql.NullString        `json:"eventLabel"`
	EventValue    sql.NullInt32         `json:"eventValue"`
	PageUrl       sql.NullString        `json:"pageUrl"`
	ReferrerUrl   sql.NullString        `json:"referrerUrl"`
	CourseID      uuid.NullUUID         `json:"courseId"`
	ModuleID      uuid.NullUUID         `json:"moduleId"`
	LessonID      uuid.NullUUID         `json:"lessonId"`
	QuizID        uuid.NullUUID         `json:"quizId"`
	Properties    pqtype.NullRawMessage `json:"properties"`
	UserAgent     sql.NullString        `json:"userAgent"`
	IpAddress     pqtype.Inet           `json:"ipAddress"`
	CreatedAt     sql.NullTime          `json:"createdAt"`
}

type Announcement struct {
	ID             uuid.UUID             `json:"id"`
	CourseID       uuid.UUID             `json:"courseId"`
	AuthorID       uuid.UUID             `json:"authorId"`
	Title          string                `json:"title"`
	Content        string                `json:"content"`
	Priority       sql.NullString        `json:"priority"`
	IsPublished    sql.NullBool          `json:"isPublished"`
	PublishAt      sql.NullTime          `json:"publishAt"`
	ExpiresAt      sql.NullTime          `json:"expiresAt"`
	TargetAudience pqtype.NullRawMessage `json:"targetAudience"`
	ReadCount      sql.NullInt32         `json:"readCount"`
	CreatedAt      sql.NullTime          `json:"createdAt"`
	UpdatedAt      sql.NullTime          `json:"updatedAt"`
}

type AnnouncementRead struct {
	ID             uuid.UUID    `json:"id"`
	AnnouncementID uuid.UUID    `json:"announcementId"`
	UserID         uuid.UUID    `json:"userId"`
	ReadAt         sql.NullTime `json:"readAt"`
}

type AnswerOption struct {
	ID          uuid.UUID      `json:"id"`
	QuestionID  uuid.UUID      `json:"questionId"`
	OptionText  string         `json:"optionText"`
	OptionValue sql.NullString `json:"optionValue"`
	IsCorrect   sql.NullBool   `json:"isCorrect"`
	Explanation sql.NullString `json:"explanation"`
	OrderIndex  int32          `json:"orderIndex"`
	CreatedAt   sql.NullTime   `json:"createdAt"`
}

type AuditLog struct {
	ID           uuid.UUID             `json:"id"`
	UserID       uuid.NullUUID         `json:"userId"`
	Action       string                `json:"action"`
	ResourceType string                `json:"resourceType"`
	ResourceID   uuid.NullUUID         `json:"resourceId"`
	OldValues    pqtype.NullRawMessage `json:"oldValues"`
	NewValues    pqtype.NullRawMessage `json:"newValues"`
	IpAddress    pqtype.Inet           `json:"ipAddress"`
	UserAgent    sql.NullString        `json:"userAgent"`
	CreatedAt    sql.NullTime          `json:"createdAt"`
}

type Certificate struct {
	ID                uuid.UUID             `json:"id"`
	EnrollmentID      uuid.UUID             `json:"enrollmentId"`
	CertificateNumber string                `json:"certificateNumber"`
	IssuedAt          sql.NullTime          `json:"issuedAt"`
	ExpiresAt         sql.NullTime          `json:"expiresAt"`
	TemplateID        sql.NullString        `json:"templateId"`
	VerificationUrl   sql.NullString        `json:"verificationUrl"`
	PdfUrl            sql.NullString        `json:"pdfUrl"`
	Metadata          pqtype.NullRawMessage `json:"metadata"`
	Revoked           sql.NullBool          `json:"revoked"`
	RevokedAt         sql.NullTime          `json:"revokedAt"`
	RevokedReason     sql.NullString        `json:"revokedReason"`
}

type Course struct {
	ID                    uuid.UUID             `json:"id"`
	Code                  string                `json:"code"`
	Title                 string                `json:"title"`
	Slug                  string                `json:"slug"`
	Description           sql.NullString        `json:"description"`
	Syllabus              sql.NullString        `json:"syllabus"`
	InstructorID          uuid.UUID             `json:"instructorId"`
	Category              sql.NullString        `json:"category"`
	SubCategory           sql.NullString        `json:"subCategory"`
	Level                 sql.NullString        `json:"level"`
	Language              sql.NullString        `json:"language"`
	ThumbnailUrl          sql.NullString        `json:"thumbnailUrl"`
	IntroVideoUrl         sql.NullString        `json:"introVideoUrl"`
	DurationHours         sql.NullInt32         `json:"durationHours"`
	Price                 sql.NullString        `json:"price"`
	Currency              sql.NullString        `json:"currency"`
	IsFree                sql.NullBool          `json:"isFree"`
	IsPublished           sql.NullBool          `json:"isPublished"`
	PublishedAt           sql.NullTime          `json:"publishedAt"`
	IsFeatured            sql.NullBool          `json:"isFeatured"`
	EnrollmentType        sql.NullString        `json:"enrollmentType"`
	MaxStudents           sql.NullInt32         `json:"maxStudents"`
	Prerequisites         []string              `json:"prerequisites"`
	Tags                  []string              `json:"tags"`
	LearningOutcomes      []string              `json:"learningOutcomes"`
	Requirements          []string              `json:"requirements"`
	TargetAudience        sql.NullString        `json:"targetAudience"`
	CompletionCertificate sql.NullBool          `json:"completionCertificate"`
	AllowDiscussion       sql.NullBool          `json:"allowDiscussion"`
	AllowDownload         sql.NullBool          `json:"allowDownload"`
	Metadata              pqtype.NullRawMessage `json:"metadata"`
	Settings              pqtype.NullRawMessage `json:"settings"`
	RatingAverage         sql.NullString        `json:"ratingAverage"`
	RatingCount           sql.NullInt32         `json:"ratingCount"`
	EnrolledCount         sql.NullInt32         `json:"enrolledCount"`
	CompletedCount        sql.NullInt32         `json:"completedCount"`
	CreatedAt             sql.NullTime          `json:"createdAt"`
	UpdatedAt             sql.NullTime          `json:"updatedAt"`
	ArchivedAt            sql.NullTime          `json:"archivedAt"`
	DeletedAt             sql.NullTime          `json:"deletedAt"`
}

type CourseAnalytic struct {
	ID                      uuid.UUID      `json:"id"`
	CourseID                uuid.UUID      `json:"courseId"`
	Date                    time.Time      `json:"date"`
	EnrolledCount           sql.NullInt32  `json:"enrolledCount"`
	ActiveStudents          sql.NullInt32  `json:"activeStudents"`
	CompletedCount          sql.NullInt32  `json:"completedCount"`
	DroppedCount            sql.NullInt32  `json:"droppedCount"`
	AverageProgress         sql.NullString `json:"averageProgress"`
	AverageTimeSpentMinutes sql.NullInt32  `json:"averageTimeSpentMinutes"`
	LessonViews             sql.NullInt32  `json:"lessonViews"`
	QuizAttempts            sql.NullInt32  `json:"quizAttempts"`
	ForumPosts              sql.NullInt32  `json:"forumPosts"`
	AverageQuizScore        sql.NullString `json:"averageQuizScore"`
	CompletionRate          sql.NullString `json:"completionRate"`
	CreatedAt               sql.NullTime   `json:"createdAt"`
}

type CourseRating struct {
	ID                   uuid.UUID      `json:"id"`
	CourseID             uuid.UUID      `json:"courseId"`
	UserID               uuid.UUID      `json:"userId"`
	EnrollmentID         uuid.UUID      `json:"enrollmentId"`
	Rating               int32          `json:"rating"`
	ReviewTitle          sql.NullString `json:"reviewTitle"`
	ReviewContent        sql.NullString `json:"reviewContent"`
	IsVerifiedPurchase   sql.NullBool   `json:"isVerifiedPurchase"`
	HelpfulCount         sql.NullInt32  `json:"helpfulCount"`
	UnhelpfulCount       sql.NullInt32  `json:"unhelpfulCount"`
	InstructorResponse   sql.NullString `json:"instructorResponse"`
	InstructorResponseAt sql.NullTime   `json:"instructorResponseAt"`
	CreatedAt            sql.NullTime   `json:"createdAt"`
	UpdatedAt            sql.NullTime   `json:"updatedAt"`
}

type CourseStaff struct {
	ID          uuid.UUID             `json:"id"`
	CourseID    uuid.UUID             `json:"courseId"`
	UserID      uuid.UUID             `json:"userId"`
	Role        string                `json:"role"`
	Permissions pqtype.NullRawMessage `json:"permissions"`
	AssignedAt  sql.NullTime          `json:"assignedAt"`
	AssignedBy  uuid.NullUUID         `json:"assignedBy"`
}

type DataArchive struct {
	ID            uuid.UUID      `json:"id"`
	UserID        uuid.NullUUID  `json:"userId"`
	ArchiveType   string         `json:"archiveType"`
	Status        sql.NullString `json:"status"`
	FilePath      sql.NullString `json:"filePath"`
	FileSize      sql.NullInt64  `json:"fileSize"`
	RequestedAt   sql.NullTime   `json:"requestedAt"`
	CompletedAt   sql.NullTime   `json:"completedAt"`
	ExpiresAt     sql.NullTime   `json:"expiresAt"`
	DownloadCount sql.NullInt32  `json:"downloadCount"`
	ErrorMessage  sql.NullString `json:"errorMessage"`
}

type Enrollment struct {
	ID                  uuid.UUID             `json:"id"`
	UserID              uuid.UUID             `json:"userId"`
	CourseID            uuid.UUID             `json:"courseId"`
	Status              sql.NullString        `json:"status"`
	EnrollmentType      sql.NullString        `json:"enrollmentType"`
	EnrolledAt          sql.NullTime          `json:"enrolledAt"`
	StartedAt           sql.NullTime          `json:"startedAt"`
	CompletedAt         sql.NullTime          `json:"completedAt"`
	SuspendedAt         sql.NullTime          `json:"suspendedAt"`
	SuspendedReason     sql.NullString        `json:"suspendedReason"`
	DroppedAt           sql.NullTime          `json:"droppedAt"`
	DroppedReason       sql.NullString        `json:"droppedReason"`
	ProgressPercentage  sql.NullString        `json:"progressPercentage"`
	Grade               sql.NullString        `json:"grade"`
	GradePoints         sql.NullString        `json:"gradePoints"`
	CertificateIssued   sql.NullBool          `json:"certificateIssued"`
	CertificateIssuedAt sql.NullTime          `json:"certificateIssuedAt"`
	CertificateUrl      sql.NullString        `json:"certificateUrl"`
	LastAccessedAt      sql.NullTime          `json:"lastAccessedAt"`
	TimeSpentMinutes    sql.NullInt32         `json:"timeSpentMinutes"`
	Notes               sql.NullString        `json:"notes"`
	Metadata            pqtype.NullRawMessage `json:"metadata"`
}

type EnrollmentRequest struct {
	ID               uuid.UUID      `json:"id"`
	UserID           uuid.UUID      `json:"userId"`
	CourseID         uuid.UUID      `json:"courseId"`
	Status           sql.NullString `json:"status"`
	ReasonForJoining sql.NullString `json:"reasonForJoining"`
	ReviewedBy       uuid.NullUUID  `json:"reviewedBy"`
	ReviewedAt       sql.NullTime   `json:"reviewedAt"`
	ReviewNotes      sql.NullString `json:"reviewNotes"`
	CreatedAt        sql.NullTime   `json:"createdAt"`
}

type FileUpload struct {
	ID              uuid.UUID             `json:"id"`
	UploadedBy      uuid.UUID             `json:"uploadedBy"`
	FileName        string                `json:"fileName"`
	FileSize        int64                 `json:"fileSize"`
	FileType        string                `json:"fileType"`
	MimeType        sql.NullString        `json:"mimeType"`
	StoragePath     string                `json:"storagePath"`
	StorageProvider sql.NullString        `json:"storageProvider"`
	Url             sql.NullString        `json:"url"`
	ThumbnailUrl    sql.NullString        `json:"thumbnailUrl"`
	Metadata        pqtype.NullRawMessage `json:"metadata"`
	VirusScanned    sql.NullBool          `json:"virusScanned"`
	VirusScanResult sql.NullString        `json:"virusScanResult"`
	UploadedAt      sql.NullTime          `json:"uploadedAt"`
	DeletedAt       sql.NullTime          `json:"deletedAt"`
}

type ForumPost struct {
	ID                   uuid.UUID      `json:"id"`
	ThreadID             uuid.UUID      `json:"threadId"`
	ParentID             uuid.NullUUID  `json:"parentId"`
	AuthorID             uuid.UUID      `json:"authorId"`
	Content              string         `json:"content"`
	IsAnonymous          sql.NullBool   `json:"isAnonymous"`
	IsInstructorResponse sql.NullBool   `json:"isInstructorResponse"`
	Upvotes              sql.NullInt32  `json:"upvotes"`
	Downvotes            sql.NullInt32  `json:"downvotes"`
	IsSolution           sql.NullBool   `json:"isSolution"`
	EditedAt             sql.NullTime   `json:"editedAt"`
	EditedBy             uuid.NullUUID  `json:"editedBy"`
	CreatedAt            sql.NullTime   `json:"createdAt"`
	DeletedAt            sql.NullTime   `json:"deletedAt"`
	DeletedBy            uuid.NullUUID  `json:"deletedBy"`
	DeletedReason        sql.NullString `json:"deletedReason"`
}

type ForumReport struct {
	ID             uuid.UUID      `json:"id"`
	ReporterID     uuid.UUID      `json:"reporterId"`
	ContentType    string         `json:"contentType"`
	ContentID      uuid.UUID      `json:"contentId"`
	Reason         string         `json:"reason"`
	Description    sql.NullString `json:"description"`
	Status         sql.NullString `json:"status"`
	ReviewedBy     uuid.NullUUID  `json:"reviewedBy"`
	ReviewedAt     sql.NullTime   `json:"reviewedAt"`
	ActionTaken    sql.NullString `json:"actionTaken"`
	ModeratorNotes sql.NullString `json:"moderatorNotes"`
	CreatedAt      sql.NullTime   `json:"createdAt"`
}

type ForumThread struct {
	ID           uuid.UUID      `json:"id"`
	CourseID     uuid.UUID      `json:"courseId"`
	ModuleID     uuid.NullUUID  `json:"moduleId"`
	LessonID     uuid.NullUUID  `json:"lessonId"`
	AuthorID     uuid.UUID      `json:"authorId"`
	Title        string         `json:"title"`
	Content      string         `json:"content"`
	ThreadType   sql.NullString `json:"threadType"`
	IsPinned     sql.NullBool   `json:"isPinned"`
	IsLocked     sql.NullBool   `json:"isLocked"`
	IsAnonymous  sql.NullBool   `json:"isAnonymous"`
	Tags         []string       `json:"tags"`
	ViewCount    sql.NullInt32  `json:"viewCount"`
	ReplyCount   sql.NullInt32  `json:"replyCount"`
	LastReplyAt  sql.NullTime   `json:"lastReplyAt"`
	LastReplyBy  uuid.NullUUID  `json:"lastReplyBy"`
	Upvotes      sql.NullInt32  `json:"upvotes"`
	Downvotes    sql.NullInt32  `json:"downvotes"`
	IsAnswered   sql.NullBool   `json:"isAnswered"`
	BestAnswerID uuid.NullUUID  `json:"bestAnswerId"`
	CreatedAt    sql.NullTime   `json:"createdAt"`
	UpdatedAt    sql.NullTime   `json:"updatedAt"`
	DeletedAt    sql.NullTime   `json:"deletedAt"`
	DeletedBy    uuid.NullUUID  `json:"deletedBy"`
}

type ForumVote struct {
	ID          uuid.UUID    `json:"id"`
	UserID      uuid.UUID    `json:"userId"`
	VotableType string       `json:"votableType"`
	VotableID   uuid.UUID    `json:"votableId"`
	VoteType    string       `json:"voteType"`
	CreatedAt   sql.NullTime `json:"createdAt"`
}

type Group struct {
	ID          uuid.UUID             `json:"id"`
	Name        string                `json:"name"`
	DisplayName string                `json:"displayName"`
	Description sql.NullString        `json:"description"`
	IsSystem    sql.NullBool          `json:"isSystem"`
	Priority    sql.NullInt32         `json:"priority"`
	Metadata    pqtype.NullRawMessage `json:"metadata"`
	CreatedAt   sql.NullTime          `json:"createdAt"`
	UpdatedAt   sql.NullTime          `json:"updatedAt"`
}

type GroupPermission struct {
	ID           uuid.UUID             `json:"id"`
	GroupID      uuid.UUID             `json:"groupId"`
	PermissionID uuid.UUID             `json:"permissionId"`
	Constraints  pqtype.NullRawMessage `json:"constraints"`
	GrantedAt    sql.NullTime          `json:"grantedAt"`
	GrantedBy    uuid.NullUUID         `json:"grantedBy"`
}

type Lesson struct {
	ID              uuid.UUID             `json:"id"`
	ModuleID        uuid.UUID             `json:"moduleId"`
	Title           string                `json:"title"`
	Description     sql.NullString        `json:"description"`
	ContentType     string                `json:"contentType"`
	Content         json.RawMessage       `json:"content"`
	OrderIndex      int32                 `json:"orderIndex"`
	DurationMinutes sql.NullInt32         `json:"durationMinutes"`
	IsPreview       sql.NullBool          `json:"isPreview"`
	IsPublished     sql.NullBool          `json:"isPublished"`
	AllowComments   sql.NullBool          `json:"allowComments"`
	Attachments     pqtype.NullRawMessage `json:"attachments"`
	Transcript      sql.NullString        `json:"transcript"`
	CreatedAt       sql.NullTime          `json:"createdAt"`
	UpdatedAt       sql.NullTime          `json:"updatedAt"`
}

type LessonProgress struct {
	ID                   uuid.UUID             `json:"id"`
	UserID               uuid.UUID             `json:"userId"`
	LessonID             uuid.UUID             `json:"lessonId"`
	EnrollmentID         uuid.UUID             `json:"enrollmentId"`
	Status               sql.NullString        `json:"status"`
	StartedAt            sql.NullTime          `json:"startedAt"`
	CompletedAt          sql.NullTime          `json:"completedAt"`
	LastPosition         sql.NullInt32         `json:"lastPosition"`
	TimeSpentSeconds     sql.NullInt32         `json:"timeSpentSeconds"`
	CompletionPercentage sql.NullString        `json:"completionPercentage"`
	Notes                sql.NullString        `json:"notes"`
	Bookmarks            pqtype.NullRawMessage `json:"bookmarks"`
}

type Module struct {
	ID                       uuid.UUID      `json:"id"`
	CourseID                 uuid.UUID      `json:"courseId"`
	Title                    string         `json:"title"`
	Description              sql.NullString `json:"description"`
	OrderIndex               int32          `json:"orderIndex"`
	IsPublished              sql.NullBool   `json:"isPublished"`
	UnlockType               sql.NullString `json:"unlockType"`
	UnlockDate               sql.NullTime   `json:"unlockDate"`
	Prerequisites            []uuid.UUID    `json:"prerequisites"`
	EstimatedDurationMinutes sql.NullInt32  `json:"estimatedDurationMinutes"`
	CreatedAt                sql.NullTime   `json:"createdAt"`
	UpdatedAt                sql.NullTime   `json:"updatedAt"`
}

type ModuleProgress struct {
	ID                   uuid.UUID      `json:"id"`
	UserID               uuid.UUID      `json:"userId"`
	ModuleID             uuid.UUID      `json:"moduleId"`
	EnrollmentID         uuid.UUID      `json:"enrollmentId"`
	LessonsCompleted     sql.NullInt32  `json:"lessonsCompleted"`
	LessonsTotal         sql.NullInt32  `json:"lessonsTotal"`
	QuizzesCompleted     sql.NullInt32  `json:"quizzesCompleted"`
	QuizzesTotal         sql.NullInt32  `json:"quizzesTotal"`
	AverageQuizScore     sql.NullString `json:"averageQuizScore"`
	TimeSpentSeconds     sql.NullInt32  `json:"timeSpentSeconds"`
	CompletionPercentage sql.NullString `json:"completionPercentage"`
	UnlockedAt           sql.NullTime   `json:"unlockedAt"`
	StartedAt            sql.NullTime   `json:"startedAt"`
	CompletedAt          sql.NullTime   `json:"completedAt"`
}

type Notification struct {
	ID        uuid.UUID             `json:"id"`
	UserID    uuid.UUID             `json:"userId"`
	Type      string                `json:"type"`
	Title     string                `json:"title"`
	Message   string                `json:"message"`
	Data      pqtype.NullRawMessage `json:"data"`
	Priority  sql.NullString        `json:"priority"`
	ReadAt    sql.NullTime          `json:"readAt"`
	ClickedAt sql.NullTime          `json:"clickedAt"`
	ActionUrl sql.NullString        `json:"actionUrl"`
	ExpiresAt sql.NullTime          `json:"expiresAt"`
	CreatedAt sql.NullTime          `json:"createdAt"`
}

type NotificationPreference struct {
	ID              uuid.UUID             `json:"id"`
	UserID          uuid.UUID             `json:"userId"`
	EmailEnabled    sql.NullBool          `json:"emailEnabled"`
	EmailFrequency  sql.NullString        `json:"emailFrequency"`
	PushEnabled     sql.NullBool          `json:"pushEnabled"`
	SmsEnabled      sql.NullBool          `json:"smsEnabled"`
	Preferences     pqtype.NullRawMessage `json:"preferences"`
	QuietHoursStart sql.NullTime          `json:"quietHoursStart"`
	QuietHoursEnd   sql.NullTime          `json:"quietHoursEnd"`
	CreatedAt       sql.NullTime          `json:"createdAt"`
	UpdatedAt       sql.NullTime          `json:"updatedAt"`
}

type PasswordReset struct {
	ID        uuid.UUID    `json:"id"`
	UserID    uuid.UUID    `json:"userId"`
	TokenHash string       `json:"tokenHash"`
	ExpiresAt time.Time    `json:"expiresAt"`
	UsedAt    sql.NullTime `json:"usedAt"`
	CreatedAt sql.NullTime `json:"createdAt"`
}

type Permission struct {
	ID          uuid.UUID      `json:"id"`
	Resource    string         `json:"resource"`
	Action      string         `json:"action"`
	Scope       string         `json:"scope"`
	Description sql.NullString `json:"description"`
	CreatedAt   sql.NullTime   `json:"createdAt"`
}

type QuestionBank struct {
	ID                  uuid.UUID             `json:"id"`
	CreatedBy           uuid.UUID             `json:"createdBy"`
	Title               string                `json:"title"`
	Category            sql.NullString        `json:"category"`
	Tags                []string              `json:"tags"`
	Difficulty          sql.NullString        `json:"difficulty"`
	QuestionText        string                `json:"questionText"`
	QuestionType        string                `json:"questionType"`
	Explanation         sql.NullString        `json:"explanation"`
	Hints               []string              `json:"hints"`
	Points              sql.NullInt32         `json:"points"`
	TimeEstimateSeconds sql.NullInt32         `json:"timeEstimateSeconds"`
	UsageCount          sql.NullInt32         `json:"usageCount"`
	Metadata            pqtype.NullRawMessage `json:"metadata"`
	CreatedAt           sql.NullTime          `json:"createdAt"`
	UpdatedAt           sql.NullTime          `json:"updatedAt"`
}

type Quiz struct {
	ID                    uuid.UUID             `json:"id"`
	ModuleID              uuid.UUID             `json:"moduleId"`
	Title                 string                `json:"title"`
	Description           sql.NullString        `json:"description"`
	Instructions          sql.NullString        `json:"instructions"`
	QuizType              sql.NullString        `json:"quizType"`
	OrderIndex            int32                 `json:"orderIndex"`
	IsPublished           sql.NullBool          `json:"isPublished"`
	AvailableFrom         sql.NullTime          `json:"availableFrom"`
	AvailableUntil        sql.NullTime          `json:"availableUntil"`
	TimeLimitMinutes      sql.NullInt32         `json:"timeLimitMinutes"`
	AttemptLimit          sql.NullInt32         `json:"attemptLimit"`
	PassingScore          sql.NullString        `json:"passingScore"`
	TotalPoints           sql.NullInt32         `json:"totalPoints"`
	RandomizeQuestions    sql.NullBool          `json:"randomizeQuestions"`
	RandomizeAnswers      sql.NullBool          `json:"randomizeAnswers"`
	QuestionsPerPage      sql.NullInt32         `json:"questionsPerPage"`
	ShowCorrectAnswers    sql.NullString        `json:"showCorrectAnswers"`
	AllowBackNavigation   sql.NullBool          `json:"allowBackNavigation"`
	RequiredForCompletion sql.NullBool          `json:"requiredForCompletion"`
	WeightPercentage      sql.NullString        `json:"weightPercentage"`
	Settings              pqtype.NullRawMessage `json:"settings"`
	CreatedAt             sql.NullTime          `json:"createdAt"`
	UpdatedAt             sql.NullTime          `json:"updatedAt"`
}

type QuizAttempt struct {
	ID               uuid.UUID             `json:"id"`
	UserID           uuid.UUID             `json:"userId"`
	QuizID           uuid.UUID             `json:"quizId"`
	AttemptNumber    int32                 `json:"attemptNumber"`
	Status           sql.NullString        `json:"status"`
	StartedAt        sql.NullTime          `json:"startedAt"`
	SubmittedAt      sql.NullTime          `json:"submittedAt"`
	GradedAt         sql.NullTime          `json:"gradedAt"`
	TimeSpentSeconds sql.NullInt32         `json:"timeSpentSeconds"`
	Score            sql.NullString        `json:"score"`
	PointsEarned     sql.NullInt32         `json:"pointsEarned"`
	Passed           sql.NullBool          `json:"passed"`
	IpAddress        pqtype.Inet           `json:"ipAddress"`
	BrowserInfo      pqtype.NullRawMessage `json:"browserInfo"`
	FlaggedForReview sql.NullBool          `json:"flaggedForReview"`
	ReviewNotes      sql.NullString        `json:"reviewNotes"`
	GradedBy         uuid.NullUUID         `json:"gradedBy"`
}

type QuizQuestion struct {
	ID               uuid.UUID             `json:"id"`
	QuizID           uuid.UUID             `json:"quizId"`
	QuestionBankID   uuid.NullUUID         `json:"questionBankId"`
	OrderIndex       int32                 `json:"orderIndex"`
	QuestionText     string                `json:"questionText"`
	QuestionType     string                `json:"questionType"`
	Required         sql.NullBool          `json:"required"`
	Points           sql.NullInt32         `json:"points"`
	NegativePoints   sql.NullInt32         `json:"negativePoints"`
	Explanation      sql.NullString        `json:"explanation"`
	Hints            []string              `json:"hints"`
	TimeLimitSeconds sql.NullInt32         `json:"timeLimitSeconds"`
	Metadata         pqtype.NullRawMessage `json:"metadata"`
	CreatedAt        sql.NullTime          `json:"createdAt"`
	UpdatedAt        sql.NullTime          `json:"updatedAt"`
}

type StudentAnswer struct {
	ID               uuid.UUID      `json:"id"`
	AttemptID        uuid.UUID      `json:"attemptId"`
	QuestionID       uuid.UUID      `json:"questionId"`
	AnswerText       sql.NullString `json:"answerText"`
	SelectedOptions  []uuid.UUID    `json:"selectedOptions"`
	IsCorrect        sql.NullBool   `json:"isCorrect"`
	PointsEarned     sql.NullString `json:"pointsEarned"`
	TimeSpentSeconds sql.NullInt32  `json:"timeSpentSeconds"`
	MarkedForReview  sql.NullBool   `json:"markedForReview"`
	Feedback         sql.NullString `json:"feedback"`
	GradedAt         sql.NullTime   `json:"gradedAt"`
	GradedBy         uuid.NullUUID  `json:"gradedBy"`
	CreatedAt        sql.NullTime   `json:"createdAt"`
	UpdatedAt        sql.NullTime   `json:"updatedAt"`
}

type SystemLog struct {
	ID             uuid.UUID             `json:"id"`
	UserID         uuid.NullUUID         `json:"userId"`
	Action         string                `json:"action"`
	ResourceType   sql.NullString        `json:"resourceType"`
	ResourceID     uuid.NullUUID         `json:"resourceId"`
	IpAddress      pqtype.Inet           `json:"ipAddress"`
	UserAgent      sql.NullString        `json:"userAgent"`
	RequestMethod  sql.NullString        `json:"requestMethod"`
	RequestPath    sql.NullString        `json:"requestPath"`
	RequestBody    sql.NullString        `json:"requestBody"`
	ResponseStatus sql.NullInt32         `json:"responseStatus"`
	ResponseTimeMs sql.NullInt32         `json:"responseTimeMs"`
	ErrorMessage   sql.NullString        `json:"errorMessage"`
	Metadata       pqtype.NullRawMessage `json:"metadata"`
	CreatedAt      sql.NullTime          `json:"createdAt"`
}

type User struct {
	ID                     uuid.UUID             `json:"id"`
	Email                  string                `json:"email"`
	EmailVerified          sql.NullBool          `json:"emailVerified"`
	EmailVerificationToken sql.NullString        `json:"emailVerificationToken"`
	EmailVerifiedAt        sql.NullTime          `json:"emailVerifiedAt"`
	PasswordHash           string                `json:"passwordHash"`
	FirstName              string                `json:"firstName"`
	LastName               string                `json:"lastName"`
	DisplayName            sql.NullString        `json:"displayName"`
	AvatarUrl              sql.NullString        `json:"avatarUrl"`
	Bio                    sql.NullString        `json:"bio"`
	Phone                  sql.NullString        `json:"phone"`
	DateOfBirth            sql.NullTime          `json:"dateOfBirth"`
	Gender                 sql.NullString        `json:"gender"`
	Country                sql.NullString        `json:"country"`
	Timezone               sql.NullString        `json:"timezone"`
	PreferredLanguage      sql.NullString        `json:"preferredLanguage"`
	IsActive               sql.NullBool          `json:"isActive"`
	SuspendedAt            sql.NullTime          `json:"suspendedAt"`
	SuspendedReason        sql.NullString        `json:"suspendedReason"`
	LastLoginAt            sql.NullTime          `json:"lastLoginAt"`
	LoginCount             sql.NullInt32         `json:"loginCount"`
	FailedLoginAttempts    sql.NullInt32         `json:"failedLoginAttempts"`
	FailedLoginLockedUntil sql.NullTime          `json:"failedLoginLockedUntil"`
	PasswordChangedAt      sql.NullTime          `json:"passwordChangedAt"`
	MustChangePassword     sql.NullBool          `json:"mustChangePassword"`
	TwoFactorEnabled       sql.NullBool          `json:"twoFactorEnabled"`
	TwoFactorSecret        sql.NullString        `json:"twoFactorSecret"`
	BackupCodes            []string              `json:"backupCodes"`
	Metadata               pqtype.NullRawMessage `json:"metadata"`
	CreatedAt              sql.NullTime          `json:"createdAt"`
	UpdatedAt              sql.NullTime          `json:"updatedAt"`
	DeletedAt              sql.NullTime          `json:"deletedAt"`
}

type UserGroup struct {
	ID         uuid.UUID     `json:"id"`
	UserID     uuid.UUID     `json:"userId"`
	GroupID    uuid.UUID     `json:"groupId"`
	AssignedAt sql.NullTime  `json:"assignedAt"`
	AssignedBy uuid.NullUUID `json:"assignedBy"`
	ExpiresAt  sql.NullTime  `json:"expiresAt"`
}

type UserSession struct {
	ID               uuid.UUID             `json:"id"`
	UserID           uuid.UUID             `json:"userId"`
	RefreshTokenHash string                `json:"refreshTokenHash"`
	AccessTokenHash  sql.NullString        `json:"accessTokenHash"`
	DeviceName       sql.NullString        `json:"deviceName"`
	DeviceType       sql.NullString        `json:"deviceType"`
	Browser          sql.NullString        `json:"browser"`
	BrowserVersion   sql.NullString        `json:"browserVersion"`
	Os               sql.NullString        `json:"os"`
	OsVersion        sql.NullString        `json:"osVersion"`
	IpAddress        pqtype.Inet           `json:"ipAddress"`
	Location         pqtype.NullRawMessage `json:"location"`
	IsActive         sql.NullBool          `json:"isActive"`
	LastAccessedAt   sql.NullTime          `json:"lastAccessedAt"`
	ExpiresAt        time.Time             `json:"expiresAt"`
	RevokedAt        sql.NullTime          `json:"revokedAt"`
	RevokedReason    sql.NullString        `json:"revokedReason"`
	CreatedAt        sql.NullTime          `json:"createdAt"`
}
